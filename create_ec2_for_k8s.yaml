Description: Create t3.small amazon linux ec2 instance at us-east-1 region for kubernetes and flannel.
Parameters:
  # MetaData
  Prefix:
    Description: Input Prefix for Resource Name.
    Type: String
    Default: test
  # VPC
  VpcCidrBlock:
    Description: Input a VPC IPv4 CidrBlock. ex) 192.168.1.0/24
    Type: String
    Default: 192.168.1.0/24
  # Subnet
  PublicSubnetCidrBlock:
    Description: Input a Public Subnet IPv4 CidrBlock.  ex) 192.168.1.0/25
    Type: String
    Default: 192.168.1.0/25
  # EC2 keypair
  EC2KeyName:
    Description: Input a Key name. This Parameter will be a Name tag.
    Type: AWS::EC2::KeyPair::KeyName
  # Number of EC2
  WorkerNum:
    Description: Input number of EC2 for Worker.
    Type: Number
    Default: 2
Resources:
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}_vpc"
  # Subnet
  MyPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: "us-east-1a"
      CidrBlock: !Ref PublicSubnetCidrBlock
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}_subnet"
      VpcId: !Ref MyVPC
  # IGW
  MyInternetGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}_igw"
  MyVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MyInternetGW
      VpcId: !Ref MyVPC
  # RouteTable
  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}_rt"
      VpcId: !Ref MyVPC
  MyPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGW
      RouteTableId: !Ref MyRouteTable
  MySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyRouteTable
      SubnetId: !Ref MyPublicSubnet
  # EC2 (AMI ID is for the us-east-1 region)
  MyEC2InstanceConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-026b57f3c383c2eec
      KeyName: !Ref EC2KeyName
      InstanceType: t3.small
      AssociatePublicIpAddress: "true"
      SecurityGroups:
        - !Ref MySecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: '30'
      UserData: !Base64 |
        #!/bin/bash -x
        sudo yum update -y
        sudo yum install -y python-pip
        sudo pip install boto boto3 botocore
        sudo amazon-linux-extras enable ansible2
        sudo yum install -y ansible
        sudo ansible-galaxy collection install ansible.posix
        sudo ansible-galaxy collection install community.general
        sudo yum install -y git
        sudo yum install -y jq
  # Security Group
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Prefix}_sg"
      GroupDescription: Allow all TCP and Flannnel VXLAN access
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        # all tcp
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        # udp for flannel vxlan
        - IpProtocol: udp
          FromPort: 8472
          ToPort: 8472
          CidrIp: 0.0.0.0/0
  # Auto Scaling Group
  MyAutoScalingGroupForController:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref MyPublicSubnet
      LaunchConfigurationName: !Ref MyEC2InstanceConfig
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-ec2-controller"
          PropagateAtLaunch: true
  MyAutoScalingGroupForWorker:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref MyPublicSubnet
      LaunchConfigurationName: !Ref MyEC2InstanceConfig
      MinSize: !Ref WorkerNum
      MaxSize: !Ref WorkerNum
      DesiredCapacity: !Ref WorkerNum
      Tags:
        - Key: Name
          Value: !Sub "${Prefix}-ec2-worker"
          PropagateAtLaunch: true
